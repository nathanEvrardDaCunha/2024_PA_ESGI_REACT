import * as React from "react";import { useState, useEffect } from "react";import Cookies from "js-cookie";const UserMembershipContainer = () => {	const [memberships, setMemberships] = useState([]);	const [loading, setLoading] = useState(true);	const [error, setError] = useState(null);	const [noData, setNoData] = useState(false);		useEffect(() => {		const fetchUserMemberships = async () => {			try {				const userId = Cookies.get("userId");				if (!userId) {					throw new Error("User ID not found in cookies");				}								const response = await fetch(`http://localhost:3000/memberships/user/${userId}`);				if (response.status === 404) {					setNoData(true);				} else if (!response.ok) {					throw new Error("Failed to fetch user memberships");				} else {					const data = await response.json();					setMemberships(data);				}			} catch (error) {				setError(error.message);			} finally {				setLoading(false);			}		};				fetchUserMemberships();	}, []);		if (loading) {		return <div>Loading...</div>;	}		if (error) {		return <div>Error: {error}</div>;	}		if (noData) {		return (			<div className="container my-5 min-vh-100">			<h2 className="mb-4">Your Memberships</h2>		<p>You do not have any active memberships.</p>		</div>	);	}		return (		<div className="container my-5 min-vh-100">		<h2 className="mb-4">Your Memberships</h2>	{memberships.length === 0 ? (		<p>You do not have any active memberships.</p>	) : (		<div className="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">			{memberships.map((membership, index) => (					<div className="col" key={index}>				<div className="card h-100">				<div className="card-body">				<h5 className="card-title">Membership {index + 1}</h5>	<p className="card-text">Type: {membership.type}</p>	<p className="card-text">Access Level: {membership.accessLevel}</p>	<p className="card-text">Join Date: {new Date(membership.joinDate).toLocaleDateString()}</p>	<p className="card-text">Expiry Date: {new Date(membership.expiryDate).toLocaleDateString()}</p>	<p className="card-text">Fees: â‚¬{membership.fees}</p>	<p className="card-text">Renewal Frequency: {membership.renewalFrequency} months</p>	<p className="card-text">Payment Method: {membership.paymentMethod}</p>	</div>	</div>	</div>	))}		</div>	)}	</div>);};export default UserMembershipContainer;