import * as React from "react";import {useState, useEffect} from "react";interface UserData {	email: string;	password: string;	firstName: string;	lastName: string;	birthDate: string;	phoneNumber: string;}interface LocationData {	address: string;	country: string;	city: string;	postalCode: string;	type: string;	capacity: number;	status: string;}const UserUpdateInfoForm = () => {	const [email, setEmail] = useState("");	const [password, setPassword] = useState("");	const [firstName, setFirstName] = useState("");	const [lastName, setLastName] = useState("");	const [birthDate, setBirthDate] = useState("");	const [phoneNumber, setPhoneNumber] = useState("");	const [address, setAddress] = useState("");	const [country, setCountry] = useState("");	const [city, setCity] = useState("");	const [postalCode, setPostalCode] = useState("");	const [type, setType] = useState("user-home");	const [capacity, setCapacity] = useState(0);	const [status, setStatus] = useState("unavailable");		useEffect(() => {		fetchUserData();	}, []);		const fetchUserData = () => {		// Fetch user data from the database and update the state variables		const userData: UserData = {			email: "example@example.com",			password: "password123",			firstName: "John",			lastName: "Doe",			birthDate: "1990-01-01",			phoneNumber: "1234567890",		};				const locationData: LocationData = {			address: "123 Main St",			country: "USA",			city: "New York",			postalCode: "10001",			type: "user-home",			capacity: 4,			status: "unavailable",		};				setEmail(userData.email);		setPassword(userData.password);		setFirstName(userData.firstName);		setLastName(userData.lastName);		setBirthDate(userData.birthDate);		setPhoneNumber(userData.phoneNumber);		setAddress(locationData.address);		setCountry(locationData.country);		setCity(locationData.city);		setPostalCode(locationData.postalCode);		setType(locationData.type);		setCapacity(locationData.capacity);		setStatus(locationData.status);	};		const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {		e.preventDefault();				const updatedFields: Partial<UserData> = {};				if (email !== "") updatedFields.email = email;		if (password !== "") updatedFields.password = password;		if (firstName !== "") updatedFields.firstName = firstName;		if (lastName !== "") updatedFields.lastName = lastName;		if (birthDate !== "") updatedFields.birthDate = birthDate;		if (phoneNumber !== "") updatedFields.phoneNumber = phoneNumber;				fetch("http://localhost:3000/users/update", {			method: "PATCH",			headers: {				"Content-Type": "application/json",			},			body: JSON.stringify(updatedFields),		})			.then((response) => {				if (response.ok) {					console.log("User data updated successfully");				} else {					console.error("Failed to update user data");				}			})			.catch((error) => {				console.error("Error:", error);			});	};		const handleUpdateLocation = (e: React.FormEvent<HTMLFormElement>) => {		e.preventDefault();				const updatedLocation: LocationData = {			address,			country,			city,			postalCode,			type: "user-home",			capacity,			status: "unavailable",		};				fetch("http://localhost:3000/users/update-location", {			method: "PATCH",			headers: {				"Content-Type": "application/json",			},			body: JSON.stringify(updatedLocation),		})			.then((response) => {				if (response.ok) {					console.log("Location updated successfully");				} else {					console.error("Failed to update location");				}			})			.catch((error) => {				console.error("Error:", error);			});	};		const handleDeleteUser = () => {		fetch("http://localhost:3000/user", {			method: "DELETE",		})			.then((response) => {				if (response.ok) {					console.log("User deleted successfully");				} else {					console.error("Failed to delete user");				}			})			.catch((error) => {				console.error("Error:", error);			});	};		return (		<div className="container my-5 min-vh-100">			<h2 className="mb-4">User Information</h2>			<form onSubmit={handleSubmit}>				<div className="mb-4">					<label htmlFor="email" className="form-label">						Email Address					</label>					<input						type="email"						id="email"						className="form-control"						value={email}						onChange={(e) => setEmail(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="password" className="form-label">						Password					</label>					<input						type="password"						id="password"						className="form-control"						value={password}						onChange={(e) => setPassword(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="firstName" className="form-label">						First Name					</label>					<input						type="text"						id="firstName"						className="form-control"						value={firstName}						onChange={(e) => setFirstName(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="lastName" className="form-label">						Last Name					</label>					<input						type="text"						id="lastName"						className="form-control"						value={lastName}						onChange={(e) => setLastName(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="birthDate" className="form-label">						Birth Date					</label>					<input						type="date"						id="birthDate"						className="form-control"						value={birthDate}						onChange={(e) => setBirthDate(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="phoneNumber" className="form-label">						Phone Number					</label>					<input						type="tel"						id="phoneNumber"						className="form-control"						value={phoneNumber}						onChange={(e) => setPhoneNumber(e.target.value)}						maxLength={10}					/>				</div>				<button type="submit" className="btn btn-dark w-100 mb-3">					Update Informations				</button>			</form>						<h2 className="mt-5 mb-4">Location</h2>			<form onSubmit={handleUpdateLocation}>				<div className="mb-4">					<label htmlFor="address" className="form-label">						Address					</label>					<input						type="text"						id="address"						className="form-control"						value={address}						onChange={(e) => setAddress(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="country" className="form-label">						Country					</label>					<input						type="text"						id="country"						className="form-control"						value={country}						onChange={(e) => setCountry(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="city" className="form-label">						City					</label>					<input						type="text"						id="city"						className="form-control"						value={city}						onChange={(e) => setCity(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="postalCode" className="form-label">						Postal Code					</label>					<input						type="text"						id="postalCode"						className="form-control"						value={postalCode}						onChange={(e) => setPostalCode(e.target.value)}					/>				</div>				<div className="mb-4">					<label htmlFor="capacity" className="form-label">						Capacity					</label>					<input						type="number"						id="capacity"						className="form-control"						value={capacity}						onChange={(e) => setCapacity(parseInt(e.target.value))}					/>				</div>				<button type="submit" className="btn btn-dark w-100 mb-3">					Update Location				</button>			</form>						<button				type="button"				className="btn btn-danger w-100"				onClick={handleDeleteUser}			>				Delete User			</button>		</div>	);};export default UserUpdateInfoForm