import * as React from "react";import { useState } from "react";import { useNavigate } from "react-router-dom";// @ts-ignoreimport Cookies from "js-cookie";// @ts-ignoreimport AlertMessage from "./AlertMessage.tsx";const RegisterLocationForm = () => {	const [address, setAddress] = useState("");	const [country, setCountry] = useState("");	const [city, setCity] = useState("");	const [postalCode, setPostalCode] = useState("");	const [error, setError] = useState("");	const [success, setSuccess] = useState("");	const navigate = useNavigate();		const handleSubmit = (e) => {		e.preventDefault();		setError("");		setSuccess("");				const userEmail = Cookies.get("userEmail"); // Retrieve the user's email from the cookie				const newLocation = {			address,			country,			city,			postalCode,			type: "user-home",			capacity: 999,			status: "unavailable",			email: userEmail, // Include the user's email in the request body		};				fetch("http://localhost:3000/locations/user", {			method: "POST",			headers: {				"Content-Type": "application/json",			},			body: JSON.stringify(newLocation),		})			.then((response) => {				if (response.ok) {					setSuccess("Location created successfully");					console.log("Location created successfully");					navigate("/login");				} else {					setError("Failed to create location");					console.error("Failed to create location");				}			})			.catch((error) => {				setError("Error during location creation");				console.error("Error:", error);			});	};		return (		<div className="d-flex justify-content-center align-items-center vh-100">			<div className="container">				<div className="row justify-content-center">					<div className="col-md-6">						{error && <AlertMessage message={error} type="error" />}						{success && <AlertMessage message={success} type="success" />}						<form onSubmit={handleSubmit} className="p-1 p-md-5 bg-light rounded">							<div className="mb-4">								<label htmlFor="address" className="form-label">									Address*								</label>								<input									type="text"									id="address"									className="form-control"									value={address}									onChange={(e) => setAddress(e.target.value)}									required								/>							</div>							<div className="mb-4">								<label htmlFor="country" className="form-label">									Country*								</label>								<input									type="text"									id="country"									className="form-control"									value={country}									onChange={(e) => setCountry(e.target.value)}									required								/>							</div>							<div className="mb-4">								<label htmlFor="city" className="form-label">									City*								</label>								<input									type="text"									id="city"									className="form-control"									value={city}									onChange={(e) => setCity(e.target.value)}									required								/>							</div>							<div className="mb-4">								<label htmlFor="postalCode" className="form-label">									Postal Code*								</label>								<input									type="text"									id="postalCode"									className="form-control"									value={postalCode}									onChange={(e) => setPostalCode(e.target.value)}									required								/>							</div>							<button type="submit" className="btn btn-dark w-100">								Create Location							</button>						</form>					</div>				</div>			</div>		</div>	);};export default RegisterLocationForm;