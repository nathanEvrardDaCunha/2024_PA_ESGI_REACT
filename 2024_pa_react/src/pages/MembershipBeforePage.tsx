import * as React from 'react';import { loadStripe } from '@stripe/stripe-js';// @ts-ignoreimport Cookies from 'js-cookie';import { useNavigate } from 'react-router-dom';// @ts-ignoreimport Navbar from "../components/NavBar.tsx";// @ts-ignoreimport Footer from "../components/Footer.tsx";// @ts-ignoreimport ComposedBackground from "../components/ComposedBackground.tsx";const stripePromise = loadStripe('pk_test_51PAYakGNSIKaQBU9d6qGi3iQZzHaQWoRZ5V1RJWQkTplLuMRPEOBgjVuooqWsxZQ73SankPXEhgwQwsos4arhe6u00inH6IXaS');const MembershipBeforePage: React.FC = () => {	const navigate = useNavigate();		const [type, setType] = React.useState('');	const [renewalFrequency, setRenewalFrequency] = React.useState(12);	const [fees, setFees] = React.useState(0);		const handleSubmit = async (e: React.FormEvent) => {		e.preventDefault();				try {			const userId = Cookies.get('userId');						if (!userId) {				// Handle user not logged in				return;			}						const response = await fetch('http://localhost:3000/memberships/create-checkout-session', {				method: 'POST',				headers: {					'Content-Type': 'application/json',				},				body: JSON.stringify({					amount: fees * 100, // Convert amount to cents					userId,					type,					paymentMethod: 'card',					renewalFrequency,				}),			});						if (!response.ok) {				throw new Error('An error occurred while creating the checkout session');			}						const session = await response.json();			const stripe = await stripePromise;			const result = await stripe.redirectToCheckout({				sessionId: session.id,			});						if (result.error) {				console.log(result.error.message);			}		} catch (error) {			console.error('Error:', error);		}	};		const handleMembershipTypeClick = (type: string, fees: number, renewalFrequency: number) => {		setType(type);		setFees(fees);		setRenewalFrequency(renewalFrequency);	};		return (		<ComposedBackground>			<Navbar />			<div className="d-flex justify-content-center align-items-center min-vh-100">				<div className="container">					<div className="row justify-content-center">						<div className="col-md-6">							<div className="mb-4">								<h2 className="text-center">Choose Membership Type</h2>								<div className="d-flex justify-content-center">									<div className="card mx-2" onClick={() => handleMembershipTypeClick('normal user', 10, 12)}>										<div className="card-body text-center">											<h5 className="card-title">Normal User</h5>											<p className="card-text">€10 per year</p>										</div>									</div>									<div className="card mx-2" onClick={() => handleMembershipTypeClick('special user', 20, 12)}>										<div className="card-body text-center">											<h5 className="card-title">Special User</h5>											<p className="card-text">€20 per year</p>										</div>									</div>									<div className="card mx-2" onClick={() => handleMembershipTypeClick('unique user', 35, 12)}>										<div className="card-body text-center">											<h5 className="card-title">Unique User</h5>											<p className="card-text">€35 per year</p>										</div>									</div>								</div>							</div>							<form onSubmit={handleSubmit} className="p-4 bg-light rounded">								<h2 className="mb-4 text-center">Membership Details</h2>								<div className="mb-3">									<label htmlFor="type" className="form-label">										Type:									</label>									<input										type="text"										id="type"										className="form-control"										value={type}										disabled									/>								</div>								<div className="mb-3">									<label htmlFor="renewalFrequency" className="form-label">										Renewal Frequency (months):									</label>									<input										type="number"										id="renewalFrequency"										className="form-control"										value={renewalFrequency}										disabled									/>								</div>								<div className="mb-4">									<label htmlFor="fees" className="form-label">										Fees:									</label>									<input										type="number"										id="fees"										className="form-control"										value={fees}										disabled									/>								</div>								<button type="submit" className="btn btn-dark w-100">									Join								</button>							</form>						</div>					</div>				</div>			</div>			<Footer/>		</ComposedBackground>	);};export default MembershipBeforePage;